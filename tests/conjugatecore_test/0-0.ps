%!PS-Adobe-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Thu Feb 13 19:07:34 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 106x106mm 300 300 0 () ()
%%BoundingBox: 0 0 300 300
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 106x106mm
%%PageBoundingBox: 0 0 300 300
300 300 cairo_set_page_size
%%EndPageSetup
q 0 0 300 300 rectclip
1 0 0 -1 0 300 cm q
1 g
0 0 300 300 rectfill
0 g
1.2 w
0 J
0 j
[] 0.0 d
10 M 245.625 150 m 226.5 183.125 l S
237.219 149.562 m 235.219 153.027 l 233.219 156.492 m 231.219 159.953 l
 229.219 163.418 m 227.219 166.883 l 225.219 170.348 m 223.219 173.812 l
 S
245.625 150 m 226.5 116.875 l S
237.219 150.438 m 235.219 146.973 l 233.219 143.508 m 231.219 140.047 l
 229.219 136.582 m 227.219 133.117 l 225.219 129.652 m 223.219 126.188 l
 S
226.5 183.125 m 188.25 183.125 l S
222.676 175.625 m 218.676 175.625 l 214.676 175.625 m 210.676 175.625 l
 206.676 175.625 m 202.676 175.625 l 198.676 175.625 m 194.676 175.625 l
 S
188.25 183.125 m 169.125 150 l S
192.832 176.062 m 190.832 172.598 l 188.832 169.133 m 186.832 165.672 l
 184.832 162.207 m 182.832 158.742 l 180.832 155.277 m 178.832 151.812 l
 S
169.125 150 m 130.875 150 l S
169.125 150 m 188.25 116.875 l S
177.531 150.438 m 179.531 146.973 l 181.531 143.508 m 183.531 140.047 l
 185.531 136.582 m 187.531 133.117 l 189.531 129.652 m 191.531 126.188 l
 S
130.875 150 m 111.75 116.875 l S
122.469 150.438 m 120.469 146.973 l 118.469 143.508 m 116.469 140.047 l
 114.469 136.582 m 112.469 133.117 l 110.469 129.652 m 108.469 126.188 l
 S
130.875 150 m 111.75 183.125 l S
122.469 149.562 m 120.469 153.027 l 118.469 156.492 m 116.469 159.953 l
 114.469 163.418 m 112.469 166.883 l 110.469 170.348 m 108.469 173.812 l
 S
111.75 116.875 m 73.5 116.875 l S
107.926 124.375 m 103.926 124.375 l 99.926 124.375 m 95.926 124.375 l 91.926
 124.375 m 87.926 124.375 l 83.926 124.375 m 79.926 124.375 l S
73.5 116.875 m 54.375 150 l S
78.082 123.938 m 76.082 127.402 l 74.082 130.867 m 72.082 134.328 l 70.082
 137.793 m 68.082 141.258 l 66.082 144.723 m 64.082 148.188 l S
54.375 150 m 73.5 183.125 l S
62.781 149.562 m 64.781 153.027 l 66.781 156.492 m 68.781 159.953 l 70.781
 163.418 m 72.781 166.883 l 74.781 170.348 m 76.781 173.812 l S
73.5 183.125 m 111.75 183.125 l S
77.324 175.625 m 81.324 175.625 l 85.324 175.625 m 89.324 175.625 l 93.324
 175.625 m 97.324 175.625 l 101.324 175.625 m 105.324 175.625 l S
188.25 116.875 m 226.5 116.875 l S
192.074 124.375 m 196.074 124.375 l 200.074 124.375 m 204.074 124.375 l
 208.074 124.375 m 212.074 124.375 l 216.074 124.375 m 220.074 124.375 l
 S
Q Q
showpage
%%Trailer
%%EOF
